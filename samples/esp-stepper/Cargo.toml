[package]
name = "esp-stepper"
version = "0.1.0"
edition = "2021"

[dependencies]
cfg-if = "1"
embassy-executor = { version = "0.6", features = ["task-arena-size-20480"] }
embassy-futures = "0.1"
embassy-net = { version = "0.4", features = ["dhcpv4", "medium-ethernet", "tcp"] }
embassy-sync = "0.6"
embassy-time = { version = "0.3",  features = ["generic-queue-8"] }
embassy-usb = "0.3"
esp-alloc = "0.7"
esp-backtrace = { version = "0.14", features = ["exception-handler", "panic-handler", "println"] }
esp-hal = { version = "0.22", features = ["unstable"] }
esp-hal-embassy = "0.5"
esp-println = { version = "0.12", features = ["log"] }
esp-wifi = { version = "0.13", features = ["coex", "log", "wifi"] }
heapless = "0.8"
log = "0.4"
lumisync_embedded = { path = "../../lumisync-embedded", default-features = false, features = ["tcp"] }
postcard = { version = "1", features = ["alloc"] }
serde = { version = "1", default-features = false, features = ["alloc", "derive"] }
static_cell = "2"

[features]
esp32   = ["esp-hal/esp32",   "esp-backtrace/esp32",   "esp-hal-embassy/esp32",   "esp-println/esp32",   "esp-wifi/esp32"  ]
esp32c2 = ["esp-hal/esp32c2", "esp-backtrace/esp32c2", "esp-hal-embassy/esp32c2", "esp-println/esp32c2", "esp-wifi/esp32c2"]
esp32c3 = ["esp-hal/esp32c3", "esp-backtrace/esp32c3", "esp-hal-embassy/esp32c3", "esp-println/esp32c3", "esp-wifi/esp32c3"]
esp32c6 = ["esp-hal/esp32c6", "esp-backtrace/esp32c6", "esp-hal-embassy/esp32c6", "esp-println/esp32c6", "esp-wifi/esp32c6"]
esp32h2 = ["esp-hal/esp32h2", "esp-backtrace/esp32h2", "esp-hal-embassy/esp32h2", "esp-println/esp32h2", "esp-wifi/esp32h2"]
esp32s2 = ["esp-hal/esp32s2", "esp-backtrace/esp32s2", "esp-hal-embassy/esp32s2", "esp-println/esp32s2", "esp-wifi/esp32s2"]
esp32s3 = ["esp-hal/esp32s3", "esp-backtrace/esp32s3", "esp-hal-embassy/esp32s3", "esp-println/esp32s3", "esp-wifi/esp32s3"]

[profile.dev]
opt-level = 3

[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false
